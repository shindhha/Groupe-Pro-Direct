//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EdouardDenis.edouardUtility {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CallFileUtilitiesSoap", Namespace="http://vocalcom.com/CallFileUtilities/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ImportationError[]))]
    public partial class CallFileUtilities : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskProgressionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskModifiedIndicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImportationErrorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcludeCallsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncludeCallsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeCallsOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeCallsPriorityOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncrementDecrementCallsPriorityOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCallsPriorityOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecycleCallsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallsInformationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallsInformationsResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToTrialCallFileFromUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckTrialImportationUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddClientsFromJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddClientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClientFromJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteClientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCallsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCallsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCallbacksOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCallbacksForCallFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeCallsAffectationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteProfilerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallFileInfosOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyDnclToCallFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplyDnclToCallFileForIndicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListExistingIndicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDNCLInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDNCLInfoResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountBlacklistedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountBlacklistedResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountCallRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountCallRecordsResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplyDnclResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetDnclOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToDnclFromCsvOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToDnclOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCallFileTZOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallFileTZOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShuffleCallFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTelDisplayColumnOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CallFileUtilities() {
            this.Url = global::EdouardDenis.Properties.Settings.Default.EdouardDenis_edouardUtility_CallFileUtilities;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event GetTaskProgressionCompletedEventHandler GetTaskProgressionCompleted;
        
        /// <remarks/>
        public event GetTaskModifiedIndicesCompletedEventHandler GetTaskModifiedIndicesCompleted;
        
        /// <remarks/>
        public event GetImportationErrorsCompletedEventHandler GetImportationErrorsCompleted;
        
        /// <remarks/>
        public event ExcludeCallsCompletedEventHandler ExcludeCallsCompleted;
        
        /// <remarks/>
        public event IncludeCallsCompletedEventHandler IncludeCallsCompleted;
        
        /// <remarks/>
        public event ChangeCallsOrderCompletedEventHandler ChangeCallsOrderCompleted;
        
        /// <remarks/>
        public event ChangeCallsPriorityCompletedEventHandler ChangeCallsPriorityCompleted;
        
        /// <remarks/>
        public event IncrementDecrementCallsPriorityCompletedEventHandler IncrementDecrementCallsPriorityCompleted;
        
        /// <remarks/>
        public event SetCallsPriorityCompletedEventHandler SetCallsPriorityCompleted;
        
        /// <remarks/>
        public event RecycleCallsCompletedEventHandler RecycleCallsCompleted;
        
        /// <remarks/>
        public event GetCallsInformationsCompletedEventHandler GetCallsInformationsCompleted;
        
        /// <remarks/>
        public event GetCallsInformationsResultCompletedEventHandler GetCallsInformationsResultCompleted;
        
        /// <remarks/>
        public event AddToTrialCallFileFromUrlCompletedEventHandler AddToTrialCallFileFromUrlCompleted;
        
        /// <remarks/>
        public event CheckTrialImportationUrlCompletedEventHandler CheckTrialImportationUrlCompleted;
        
        /// <remarks/>
        public event AddClientsFromJsonCompletedEventHandler AddClientsFromJsonCompleted;
        
        /// <remarks/>
        public event AddClientsCompletedEventHandler AddClientsCompleted;
        
        /// <remarks/>
        public event UpdateClientFromJsonCompletedEventHandler UpdateClientFromJsonCompleted;
        
        /// <remarks/>
        public event UpdateClientCompletedEventHandler UpdateClientCompleted;
        
        /// <remarks/>
        public event DeleteClientsCompletedEventHandler DeleteClientsCompleted;
        
        /// <remarks/>
        public event AddCallsCompletedEventHandler AddCallsCompleted;
        
        /// <remarks/>
        public event DeleteCallsCompletedEventHandler DeleteCallsCompleted;
        
        /// <remarks/>
        public event UpdateCallbacksCompletedEventHandler UpdateCallbacksCompleted;
        
        /// <remarks/>
        public event UpdateCallbacksForCallFileCompletedEventHandler UpdateCallbacksForCallFileCompleted;
        
        /// <remarks/>
        public event ChangeCallsAffectationCompletedEventHandler ChangeCallsAffectationCompleted;
        
        /// <remarks/>
        public event ExecuteProfilerCompletedEventHandler ExecuteProfilerCompleted;
        
        /// <remarks/>
        public event GetCallFileInfosCompletedEventHandler GetCallFileInfosCompleted;
        
        /// <remarks/>
        public event ApplyDnclToCallFileCompletedEventHandler ApplyDnclToCallFileCompleted;
        
        /// <remarks/>
        public event ApplyDnclToCallFileForIndicesCompletedEventHandler ApplyDnclToCallFileForIndicesCompleted;
        
        /// <remarks/>
        public event ListExistingIndicesCompletedEventHandler ListExistingIndicesCompleted;
        
        /// <remarks/>
        public event GetDNCLInfoCompletedEventHandler GetDNCLInfoCompleted;
        
        /// <remarks/>
        public event GetDNCLInfoResultCompletedEventHandler GetDNCLInfoResultCompleted;
        
        /// <remarks/>
        public event CountBlacklistedCompletedEventHandler CountBlacklistedCompleted;
        
        /// <remarks/>
        public event GetCountBlacklistedResultCompletedEventHandler GetCountBlacklistedResultCompleted;
        
        /// <remarks/>
        public event CountCallRecordsCompletedEventHandler CountCallRecordsCompleted;
        
        /// <remarks/>
        public event GetCountCallRecordsResultCompletedEventHandler GetCountCallRecordsResultCompleted;
        
        /// <remarks/>
        public event GetApplyDnclResultCompletedEventHandler GetApplyDnclResultCompleted;
        
        /// <remarks/>
        public event ResetDnclCompletedEventHandler ResetDnclCompleted;
        
        /// <remarks/>
        public event AddToDnclFromCsvCompletedEventHandler AddToDnclFromCsvCompleted;
        
        /// <remarks/>
        public event AddToDnclCompletedEventHandler AddToDnclCompleted;
        
        /// <remarks/>
        public event SetCallFileTZCompletedEventHandler SetCallFileTZCompleted;
        
        /// <remarks/>
        public event GetCallFileTZCompletedEventHandler GetCallFileTZCompleted;
        
        /// <remarks/>
        public event ShuffleCallFileCompletedEventHandler ShuffleCallFileCompleted;
        
        /// <remarks/>
        public event UpdateTelDisplayColumnCompletedEventHandler UpdateTelDisplayColumnCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/Login", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Login([System.Xml.Serialization.XmlElementAttribute("login")] string login1, string sha1Password) {
            object[] results = this.Invoke("Login", new object[] {
                        login1,
                        sha1Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string login1, string sha1Password) {
            this.LoginAsync(login1, sha1Password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string login1, string sha1Password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        login1,
                        sha1Password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/GetTaskProgression", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaskProgression GetTaskProgression(int taskNumber) {
            object[] results = this.Invoke("GetTaskProgression", new object[] {
                        taskNumber});
            return ((TaskProgression)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskProgressionAsync(int taskNumber) {
            this.GetTaskProgressionAsync(taskNumber, null);
        }
        
        /// <remarks/>
        public void GetTaskProgressionAsync(int taskNumber, object userState) {
            if ((this.GetTaskProgressionOperationCompleted == null)) {
                this.GetTaskProgressionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskProgressionOperationCompleted);
            }
            this.InvokeAsync("GetTaskProgression", new object[] {
                        taskNumber}, this.GetTaskProgressionOperationCompleted, userState);
        }
        
        private void OnGetTaskProgressionOperationCompleted(object arg) {
            if ((this.GetTaskProgressionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskProgressionCompleted(this, new GetTaskProgressionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/GetTaskModifiedIndices", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] GetTaskModifiedIndices(int taskNumber) {
            object[] results = this.Invoke("GetTaskModifiedIndices", new object[] {
                        taskNumber});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskModifiedIndicesAsync(int taskNumber) {
            this.GetTaskModifiedIndicesAsync(taskNumber, null);
        }
        
        /// <remarks/>
        public void GetTaskModifiedIndicesAsync(int taskNumber, object userState) {
            if ((this.GetTaskModifiedIndicesOperationCompleted == null)) {
                this.GetTaskModifiedIndicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskModifiedIndicesOperationCompleted);
            }
            this.InvokeAsync("GetTaskModifiedIndices", new object[] {
                        taskNumber}, this.GetTaskModifiedIndicesOperationCompleted, userState);
        }
        
        private void OnGetTaskModifiedIndicesOperationCompleted(object arg) {
            if ((this.GetTaskModifiedIndicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskModifiedIndicesCompleted(this, new GetTaskModifiedIndicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/GetImportationErrors", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ImportationError[] GetImportationErrors(int taskNumber) {
            object[] results = this.Invoke("GetImportationErrors", new object[] {
                        taskNumber});
            return ((ImportationError[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImportationErrorsAsync(int taskNumber) {
            this.GetImportationErrorsAsync(taskNumber, null);
        }
        
        /// <remarks/>
        public void GetImportationErrorsAsync(int taskNumber, object userState) {
            if ((this.GetImportationErrorsOperationCompleted == null)) {
                this.GetImportationErrorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImportationErrorsOperationCompleted);
            }
            this.InvokeAsync("GetImportationErrors", new object[] {
                        taskNumber}, this.GetImportationErrorsOperationCompleted, userState);
        }
        
        private void OnGetImportationErrorsOperationCompleted(object arg) {
            if ((this.GetImportationErrorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImportationErrorsCompleted(this, new GetImportationErrorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/ExcludeCalls", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExcludeCalls(int customerId, string campaignId, string condition, string reason) {
            object[] results = this.Invoke("ExcludeCalls", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        reason});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExcludeCallsAsync(int customerId, string campaignId, string condition, string reason) {
            this.ExcludeCallsAsync(customerId, campaignId, condition, reason, null);
        }
        
        /// <remarks/>
        public void ExcludeCallsAsync(int customerId, string campaignId, string condition, string reason, object userState) {
            if ((this.ExcludeCallsOperationCompleted == null)) {
                this.ExcludeCallsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcludeCallsOperationCompleted);
            }
            this.InvokeAsync("ExcludeCalls", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        reason}, this.ExcludeCallsOperationCompleted, userState);
        }
        
        private void OnExcludeCallsOperationCompleted(object arg) {
            if ((this.ExcludeCallsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcludeCallsCompleted(this, new ExcludeCallsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/IncludeCalls", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IncludeCalls(int customerId, string campaignId, string condition) {
            object[] results = this.Invoke("IncludeCalls", new object[] {
                        customerId,
                        campaignId,
                        condition});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IncludeCallsAsync(int customerId, string campaignId, string condition) {
            this.IncludeCallsAsync(customerId, campaignId, condition, null);
        }
        
        /// <remarks/>
        public void IncludeCallsAsync(int customerId, string campaignId, string condition, object userState) {
            if ((this.IncludeCallsOperationCompleted == null)) {
                this.IncludeCallsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncludeCallsOperationCompleted);
            }
            this.InvokeAsync("IncludeCalls", new object[] {
                        customerId,
                        campaignId,
                        condition}, this.IncludeCallsOperationCompleted, userState);
        }
        
        private void OnIncludeCallsOperationCompleted(object arg) {
            if ((this.IncludeCallsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncludeCallsCompleted(this, new IncludeCallsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/ChangeCallsOrder", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangeCallsOrder(int customerId, string campaignId, string condition, int order) {
            object[] results = this.Invoke("ChangeCallsOrder", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        order});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeCallsOrderAsync(int customerId, string campaignId, string condition, int order) {
            this.ChangeCallsOrderAsync(customerId, campaignId, condition, order, null);
        }
        
        /// <remarks/>
        public void ChangeCallsOrderAsync(int customerId, string campaignId, string condition, int order, object userState) {
            if ((this.ChangeCallsOrderOperationCompleted == null)) {
                this.ChangeCallsOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeCallsOrderOperationCompleted);
            }
            this.InvokeAsync("ChangeCallsOrder", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        order}, this.ChangeCallsOrderOperationCompleted, userState);
        }
        
        private void OnChangeCallsOrderOperationCompleted(object arg) {
            if ((this.ChangeCallsOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeCallsOrderCompleted(this, new ChangeCallsOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/ChangeCallsPriority", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangeCallsPriority(int customerId, string campaignId, CallWithPriority[] calls) {
            object[] results = this.Invoke("ChangeCallsPriority", new object[] {
                        customerId,
                        campaignId,
                        calls});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeCallsPriorityAsync(int customerId, string campaignId, CallWithPriority[] calls) {
            this.ChangeCallsPriorityAsync(customerId, campaignId, calls, null);
        }
        
        /// <remarks/>
        public void ChangeCallsPriorityAsync(int customerId, string campaignId, CallWithPriority[] calls, object userState) {
            if ((this.ChangeCallsPriorityOperationCompleted == null)) {
                this.ChangeCallsPriorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeCallsPriorityOperationCompleted);
            }
            this.InvokeAsync("ChangeCallsPriority", new object[] {
                        customerId,
                        campaignId,
                        calls}, this.ChangeCallsPriorityOperationCompleted, userState);
        }
        
        private void OnChangeCallsPriorityOperationCompleted(object arg) {
            if ((this.ChangeCallsPriorityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeCallsPriorityCompleted(this, new ChangeCallsPriorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/IncrementDecrementCallsPriority", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IncrementDecrementCallsPriority(int customerId, string campaignId, string condition, int value) {
            object[] results = this.Invoke("IncrementDecrementCallsPriority", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        value});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void IncrementDecrementCallsPriorityAsync(int customerId, string campaignId, string condition, int value) {
            this.IncrementDecrementCallsPriorityAsync(customerId, campaignId, condition, value, null);
        }
        
        /// <remarks/>
        public void IncrementDecrementCallsPriorityAsync(int customerId, string campaignId, string condition, int value, object userState) {
            if ((this.IncrementDecrementCallsPriorityOperationCompleted == null)) {
                this.IncrementDecrementCallsPriorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncrementDecrementCallsPriorityOperationCompleted);
            }
            this.InvokeAsync("IncrementDecrementCallsPriority", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        value}, this.IncrementDecrementCallsPriorityOperationCompleted, userState);
        }
        
        private void OnIncrementDecrementCallsPriorityOperationCompleted(object arg) {
            if ((this.IncrementDecrementCallsPriorityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncrementDecrementCallsPriorityCompleted(this, new IncrementDecrementCallsPriorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/SetCallsPriority", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetCallsPriority(int customerId, string campaignId, string condition, int value) {
            object[] results = this.Invoke("SetCallsPriority", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        value});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetCallsPriorityAsync(int customerId, string campaignId, string condition, int value) {
            this.SetCallsPriorityAsync(customerId, campaignId, condition, value, null);
        }
        
        /// <remarks/>
        public void SetCallsPriorityAsync(int customerId, string campaignId, string condition, int value, object userState) {
            if ((this.SetCallsPriorityOperationCompleted == null)) {
                this.SetCallsPriorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCallsPriorityOperationCompleted);
            }
            this.InvokeAsync("SetCallsPriority", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        value}, this.SetCallsPriorityOperationCompleted, userState);
        }
        
        private void OnSetCallsPriorityOperationCompleted(object arg) {
            if ((this.SetCallsPriorityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCallsPriorityCompleted(this, new SetCallsPriorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/RecycleCalls", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RecycleCalls(int customerId, string campaignId, string condition, bool cleanHisto) {
            object[] results = this.Invoke("RecycleCalls", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        cleanHisto});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RecycleCallsAsync(int customerId, string campaignId, string condition, bool cleanHisto) {
            this.RecycleCallsAsync(customerId, campaignId, condition, cleanHisto, null);
        }
        
        /// <remarks/>
        public void RecycleCallsAsync(int customerId, string campaignId, string condition, bool cleanHisto, object userState) {
            if ((this.RecycleCallsOperationCompleted == null)) {
                this.RecycleCallsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecycleCallsOperationCompleted);
            }
            this.InvokeAsync("RecycleCalls", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        cleanHisto}, this.RecycleCallsOperationCompleted, userState);
        }
        
        private void OnRecycleCallsOperationCompleted(object arg) {
            if ((this.RecycleCallsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecycleCallsCompleted(this, new RecycleCallsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/GetCallsInformations", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCallsInformations(int customerId, string campaignId, string condition, int phoneNumberCount) {
            object[] results = this.Invoke("GetCallsInformations", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        phoneNumberCount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallsInformationsAsync(int customerId, string campaignId, string condition, int phoneNumberCount) {
            this.GetCallsInformationsAsync(customerId, campaignId, condition, phoneNumberCount, null);
        }
        
        /// <remarks/>
        public void GetCallsInformationsAsync(int customerId, string campaignId, string condition, int phoneNumberCount, object userState) {
            if ((this.GetCallsInformationsOperationCompleted == null)) {
                this.GetCallsInformationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallsInformationsOperationCompleted);
            }
            this.InvokeAsync("GetCallsInformations", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        phoneNumberCount}, this.GetCallsInformationsOperationCompleted, userState);
        }
        
        private void OnGetCallsInformationsOperationCompleted(object arg) {
            if ((this.GetCallsInformationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallsInformationsCompleted(this, new GetCallsInformationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/GetCallsInformationsResult", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallInfo[] GetCallsInformationsResult(int taskNumber) {
            object[] results = this.Invoke("GetCallsInformationsResult", new object[] {
                        taskNumber});
            return ((CallInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCallsInformationsResultAsync(int taskNumber) {
            this.GetCallsInformationsResultAsync(taskNumber, null);
        }
        
        /// <remarks/>
        public void GetCallsInformationsResultAsync(int taskNumber, object userState) {
            if ((this.GetCallsInformationsResultOperationCompleted == null)) {
                this.GetCallsInformationsResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallsInformationsResultOperationCompleted);
            }
            this.InvokeAsync("GetCallsInformationsResult", new object[] {
                        taskNumber}, this.GetCallsInformationsResultOperationCompleted, userState);
        }
        
        private void OnGetCallsInformationsResultOperationCompleted(object arg) {
            if ((this.GetCallsInformationsResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallsInformationsResultCompleted(this, new GetCallsInformationsResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/AddToTrialCallFileFromUrl", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddToTrialCallFileFromUrl(int customerId, string campaignId, string url, string[] destColumns, int[] srcColumns) {
            object[] results = this.Invoke("AddToTrialCallFileFromUrl", new object[] {
                        customerId,
                        campaignId,
                        url,
                        destColumns,
                        srcColumns});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddToTrialCallFileFromUrlAsync(int customerId, string campaignId, string url, string[] destColumns, int[] srcColumns) {
            this.AddToTrialCallFileFromUrlAsync(customerId, campaignId, url, destColumns, srcColumns, null);
        }
        
        /// <remarks/>
        public void AddToTrialCallFileFromUrlAsync(int customerId, string campaignId, string url, string[] destColumns, int[] srcColumns, object userState) {
            if ((this.AddToTrialCallFileFromUrlOperationCompleted == null)) {
                this.AddToTrialCallFileFromUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToTrialCallFileFromUrlOperationCompleted);
            }
            this.InvokeAsync("AddToTrialCallFileFromUrl", new object[] {
                        customerId,
                        campaignId,
                        url,
                        destColumns,
                        srcColumns}, this.AddToTrialCallFileFromUrlOperationCompleted, userState);
        }
        
        private void OnAddToTrialCallFileFromUrlOperationCompleted(object arg) {
            if ((this.AddToTrialCallFileFromUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToTrialCallFileFromUrlCompleted(this, new AddToTrialCallFileFromUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/CheckTrialImportationUrl", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TrialUrlInfo CheckTrialImportationUrl(string url) {
            object[] results = this.Invoke("CheckTrialImportationUrl", new object[] {
                        url});
            return ((TrialUrlInfo)(results[0]));
        }
        
        /// <remarks/>
        public void CheckTrialImportationUrlAsync(string url) {
            this.CheckTrialImportationUrlAsync(url, null);
        }
        
        /// <remarks/>
        public void CheckTrialImportationUrlAsync(string url, object userState) {
            if ((this.CheckTrialImportationUrlOperationCompleted == null)) {
                this.CheckTrialImportationUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckTrialImportationUrlOperationCompleted);
            }
            this.InvokeAsync("CheckTrialImportationUrl", new object[] {
                        url}, this.CheckTrialImportationUrlOperationCompleted, userState);
        }
        
        private void OnCheckTrialImportationUrlOperationCompleted(object arg) {
            if ((this.CheckTrialImportationUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckTrialImportationUrlCompleted(this, new CheckTrialImportationUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/AddClientsFromJson", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddClientsFromJson(int customerId, string campaignId, string[] fields, string jsonValues, bool addToCallFile, string[] phoneFields, string memoField, bool excludeCalls, string excludeReason, int order, int agentCode, System.DateTime callbackHour) {
            object[] results = this.Invoke("AddClientsFromJson", new object[] {
                        customerId,
                        campaignId,
                        fields,
                        jsonValues,
                        addToCallFile,
                        phoneFields,
                        memoField,
                        excludeCalls,
                        excludeReason,
                        order,
                        agentCode,
                        callbackHour});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddClientsFromJsonAsync(int customerId, string campaignId, string[] fields, string jsonValues, bool addToCallFile, string[] phoneFields, string memoField, bool excludeCalls, string excludeReason, int order, int agentCode, System.DateTime callbackHour) {
            this.AddClientsFromJsonAsync(customerId, campaignId, fields, jsonValues, addToCallFile, phoneFields, memoField, excludeCalls, excludeReason, order, agentCode, callbackHour, null);
        }
        
        /// <remarks/>
        public void AddClientsFromJsonAsync(int customerId, string campaignId, string[] fields, string jsonValues, bool addToCallFile, string[] phoneFields, string memoField, bool excludeCalls, string excludeReason, int order, int agentCode, System.DateTime callbackHour, object userState) {
            if ((this.AddClientsFromJsonOperationCompleted == null)) {
                this.AddClientsFromJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddClientsFromJsonOperationCompleted);
            }
            this.InvokeAsync("AddClientsFromJson", new object[] {
                        customerId,
                        campaignId,
                        fields,
                        jsonValues,
                        addToCallFile,
                        phoneFields,
                        memoField,
                        excludeCalls,
                        excludeReason,
                        order,
                        agentCode,
                        callbackHour}, this.AddClientsFromJsonOperationCompleted, userState);
        }
        
        private void OnAddClientsFromJsonOperationCompleted(object arg) {
            if ((this.AddClientsFromJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddClientsFromJsonCompleted(this, new AddClientsFromJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/AddClients", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddClients(int customerId, string campaignId, string[] fields, [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfAnyType")] [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)] object[][] values, bool addToCallFile, string[] phoneFields, string memoField, bool excludeCalls, string excludeReason, int order, int agentCode, System.DateTime callbackHour) {
            object[] results = this.Invoke("AddClients", new object[] {
                        customerId,
                        campaignId,
                        fields,
                        values,
                        addToCallFile,
                        phoneFields,
                        memoField,
                        excludeCalls,
                        excludeReason,
                        order,
                        agentCode,
                        callbackHour});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddClientsAsync(int customerId, string campaignId, string[] fields, object[][] values, bool addToCallFile, string[] phoneFields, string memoField, bool excludeCalls, string excludeReason, int order, int agentCode, System.DateTime callbackHour) {
            this.AddClientsAsync(customerId, campaignId, fields, values, addToCallFile, phoneFields, memoField, excludeCalls, excludeReason, order, agentCode, callbackHour, null);
        }
        
        /// <remarks/>
        public void AddClientsAsync(int customerId, string campaignId, string[] fields, object[][] values, bool addToCallFile, string[] phoneFields, string memoField, bool excludeCalls, string excludeReason, int order, int agentCode, System.DateTime callbackHour, object userState) {
            if ((this.AddClientsOperationCompleted == null)) {
                this.AddClientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddClientsOperationCompleted);
            }
            this.InvokeAsync("AddClients", new object[] {
                        customerId,
                        campaignId,
                        fields,
                        values,
                        addToCallFile,
                        phoneFields,
                        memoField,
                        excludeCalls,
                        excludeReason,
                        order,
                        agentCode,
                        callbackHour}, this.AddClientsOperationCompleted, userState);
        }
        
        private void OnAddClientsOperationCompleted(object arg) {
            if ((this.AddClientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddClientsCompleted(this, new AddClientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/UpdateClientFromJson", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateClientFromJson(int customerId, string campaignId, long indice, string[] callFileFields, string[] callFileValues, string[] clientFields, string jsonClientValues) {
            object[] results = this.Invoke("UpdateClientFromJson", new object[] {
                        customerId,
                        campaignId,
                        indice,
                        callFileFields,
                        callFileValues,
                        clientFields,
                        jsonClientValues});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClientFromJsonAsync(int customerId, string campaignId, long indice, string[] callFileFields, string[] callFileValues, string[] clientFields, string jsonClientValues) {
            this.UpdateClientFromJsonAsync(customerId, campaignId, indice, callFileFields, callFileValues, clientFields, jsonClientValues, null);
        }
        
        /// <remarks/>
        public void UpdateClientFromJsonAsync(int customerId, string campaignId, long indice, string[] callFileFields, string[] callFileValues, string[] clientFields, string jsonClientValues, object userState) {
            if ((this.UpdateClientFromJsonOperationCompleted == null)) {
                this.UpdateClientFromJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClientFromJsonOperationCompleted);
            }
            this.InvokeAsync("UpdateClientFromJson", new object[] {
                        customerId,
                        campaignId,
                        indice,
                        callFileFields,
                        callFileValues,
                        clientFields,
                        jsonClientValues}, this.UpdateClientFromJsonOperationCompleted, userState);
        }
        
        private void OnUpdateClientFromJsonOperationCompleted(object arg) {
            if ((this.UpdateClientFromJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClientFromJsonCompleted(this, new UpdateClientFromJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/UpdateClient", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateClient(int customerId, string campaignId, long indice, string[] callFileFields, string[] callFileValues, string[] clientFields, object[] clientValues) {
            object[] results = this.Invoke("UpdateClient", new object[] {
                        customerId,
                        campaignId,
                        indice,
                        callFileFields,
                        callFileValues,
                        clientFields,
                        clientValues});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClientAsync(int customerId, string campaignId, long indice, string[] callFileFields, string[] callFileValues, string[] clientFields, object[] clientValues) {
            this.UpdateClientAsync(customerId, campaignId, indice, callFileFields, callFileValues, clientFields, clientValues, null);
        }
        
        /// <remarks/>
        public void UpdateClientAsync(int customerId, string campaignId, long indice, string[] callFileFields, string[] callFileValues, string[] clientFields, object[] clientValues, object userState) {
            if ((this.UpdateClientOperationCompleted == null)) {
                this.UpdateClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClientOperationCompleted);
            }
            this.InvokeAsync("UpdateClient", new object[] {
                        customerId,
                        campaignId,
                        indice,
                        callFileFields,
                        callFileValues,
                        clientFields,
                        clientValues}, this.UpdateClientOperationCompleted, userState);
        }
        
        private void OnUpdateClientOperationCompleted(object arg) {
            if ((this.UpdateClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClientCompleted(this, new UpdateClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/DeleteClients", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteClients(int customerId, string campaignId, string condition) {
            object[] results = this.Invoke("DeleteClients", new object[] {
                        customerId,
                        campaignId,
                        condition});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteClientsAsync(int customerId, string campaignId, string condition) {
            this.DeleteClientsAsync(customerId, campaignId, condition, null);
        }
        
        /// <remarks/>
        public void DeleteClientsAsync(int customerId, string campaignId, string condition, object userState) {
            if ((this.DeleteClientsOperationCompleted == null)) {
                this.DeleteClientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteClientsOperationCompleted);
            }
            this.InvokeAsync("DeleteClients", new object[] {
                        customerId,
                        campaignId,
                        condition}, this.DeleteClientsOperationCompleted, userState);
        }
        
        private void OnDeleteClientsOperationCompleted(object arg) {
            if ((this.DeleteClientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteClientsCompleted(this, new DeleteClientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/AddCalls", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddCalls(int customerId, string campaignId, string condition, string[] phoneFields, string memoField, bool excludeCalls, string excludeReason, int order, int agentCode, System.DateTime callbackHour) {
            object[] results = this.Invoke("AddCalls", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        phoneFields,
                        memoField,
                        excludeCalls,
                        excludeReason,
                        order,
                        agentCode,
                        callbackHour});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddCallsAsync(int customerId, string campaignId, string condition, string[] phoneFields, string memoField, bool excludeCalls, string excludeReason, int order, int agentCode, System.DateTime callbackHour) {
            this.AddCallsAsync(customerId, campaignId, condition, phoneFields, memoField, excludeCalls, excludeReason, order, agentCode, callbackHour, null);
        }
        
        /// <remarks/>
        public void AddCallsAsync(int customerId, string campaignId, string condition, string[] phoneFields, string memoField, bool excludeCalls, string excludeReason, int order, int agentCode, System.DateTime callbackHour, object userState) {
            if ((this.AddCallsOperationCompleted == null)) {
                this.AddCallsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCallsOperationCompleted);
            }
            this.InvokeAsync("AddCalls", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        phoneFields,
                        memoField,
                        excludeCalls,
                        excludeReason,
                        order,
                        agentCode,
                        callbackHour}, this.AddCallsOperationCompleted, userState);
        }
        
        private void OnAddCallsOperationCompleted(object arg) {
            if ((this.AddCallsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCallsCompleted(this, new AddCallsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/DeleteCalls", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCalls(int customerId, string campaignId, string condition) {
            object[] results = this.Invoke("DeleteCalls", new object[] {
                        customerId,
                        campaignId,
                        condition});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCallsAsync(int customerId, string campaignId, string condition) {
            this.DeleteCallsAsync(customerId, campaignId, condition, null);
        }
        
        /// <remarks/>
        public void DeleteCallsAsync(int customerId, string campaignId, string condition, object userState) {
            if ((this.DeleteCallsOperationCompleted == null)) {
                this.DeleteCallsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCallsOperationCompleted);
            }
            this.InvokeAsync("DeleteCalls", new object[] {
                        customerId,
                        campaignId,
                        condition}, this.DeleteCallsOperationCompleted, userState);
        }
        
        private void OnDeleteCallsOperationCompleted(object arg) {
            if ((this.DeleteCallsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCallsCompleted(this, new DeleteCallsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/UpdateCallbacks", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCallbacks(int customerId, string campaignId, string condition, System.DateTime callbackHour, string phoneField, int agentCode) {
            object[] results = this.Invoke("UpdateCallbacks", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        callbackHour,
                        phoneField,
                        agentCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCallbacksAsync(int customerId, string campaignId, string condition, System.DateTime callbackHour, string phoneField, int agentCode) {
            this.UpdateCallbacksAsync(customerId, campaignId, condition, callbackHour, phoneField, agentCode, null);
        }
        
        /// <remarks/>
        public void UpdateCallbacksAsync(int customerId, string campaignId, string condition, System.DateTime callbackHour, string phoneField, int agentCode, object userState) {
            if ((this.UpdateCallbacksOperationCompleted == null)) {
                this.UpdateCallbacksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCallbacksOperationCompleted);
            }
            this.InvokeAsync("UpdateCallbacks", new object[] {
                        customerId,
                        campaignId,
                        condition,
                        callbackHour,
                        phoneField,
                        agentCode}, this.UpdateCallbacksOperationCompleted, userState);
        }
        
        private void OnUpdateCallbacksOperationCompleted(object arg) {
            if ((this.UpdateCallbacksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCallbacksCompleted(this, new UpdateCallbacksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/UpdateCallbacksForCallFile", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateCallbacksForCallFile(int customerId, string callFileId, string condition, System.DateTime callbackHour, string phoneField, int agentCode) {
            object[] results = this.Invoke("UpdateCallbacksForCallFile", new object[] {
                        customerId,
                        callFileId,
                        condition,
                        callbackHour,
                        phoneField,
                        agentCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCallbacksForCallFileAsync(int customerId, string callFileId, string condition, System.DateTime callbackHour, string phoneField, int agentCode) {
            this.UpdateCallbacksForCallFileAsync(customerId, callFileId, condition, callbackHour, phoneField, agentCode, null);
        }
        
        /// <remarks/>
        public void UpdateCallbacksForCallFileAsync(int customerId, string callFileId, string condition, System.DateTime callbackHour, string phoneField, int agentCode, object userState) {
            if ((this.UpdateCallbacksForCallFileOperationCompleted == null)) {
                this.UpdateCallbacksForCallFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCallbacksForCallFileOperationCompleted);
            }
            this.InvokeAsync("UpdateCallbacksForCallFile", new object[] {
                        customerId,
                        callFileId,
                        condition,
                        callbackHour,
                        phoneField,
                        agentCode}, this.UpdateCallbacksForCallFileOperationCompleted, userState);
        }
        
        private void OnUpdateCallbacksForCallFileOperationCompleted(object arg) {
            if ((this.UpdateCallbacksForCallFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCallbacksForCallFileCompleted(this, new UpdateCallbacksForCallFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/ChangeCallsAffectation", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangeCallsAffectation(int customerId, string campaignId, string destCampaignId, string condition, int agentCode) {
            object[] results = this.Invoke("ChangeCallsAffectation", new object[] {
                        customerId,
                        campaignId,
                        destCampaignId,
                        condition,
                        agentCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeCallsAffectationAsync(int customerId, string campaignId, string destCampaignId, string condition, int agentCode) {
            this.ChangeCallsAffectationAsync(customerId, campaignId, destCampaignId, condition, agentCode, null);
        }
        
        /// <remarks/>
        public void ChangeCallsAffectationAsync(int customerId, string campaignId, string destCampaignId, string condition, int agentCode, object userState) {
            if ((this.ChangeCallsAffectationOperationCompleted == null)) {
                this.ChangeCallsAffectationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeCallsAffectationOperationCompleted);
            }
            this.InvokeAsync("ChangeCallsAffectation", new object[] {
                        customerId,
                        campaignId,
                        destCampaignId,
                        condition,
                        agentCode}, this.ChangeCallsAffectationOperationCompleted, userState);
        }
        
        private void OnChangeCallsAffectationOperationCompleted(object arg) {
            if ((this.ChangeCallsAffectationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeCallsAffectationCompleted(this, new ChangeCallsAffectationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/ExecuteProfiler", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExecuteProfiler(int customerId, string campaignId) {
            object[] results = this.Invoke("ExecuteProfiler", new object[] {
                        customerId,
                        campaignId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteProfilerAsync(int customerId, string campaignId) {
            this.ExecuteProfilerAsync(customerId, campaignId, null);
        }
        
        /// <remarks/>
        public void ExecuteProfilerAsync(int customerId, string campaignId, object userState) {
            if ((this.ExecuteProfilerOperationCompleted == null)) {
                this.ExecuteProfilerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteProfilerOperationCompleted);
            }
            this.InvokeAsync("ExecuteProfiler", new object[] {
                        customerId,
                        campaignId}, this.ExecuteProfilerOperationCompleted, userState);
        }
        
        private void OnExecuteProfilerOperationCompleted(object arg) {
            if ((this.ExecuteProfilerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteProfilerCompleted(this, new ExecuteProfilerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/GetCallFileInfos", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallFileInfo GetCallFileInfos(int customerId, string campaignId) {
            object[] results = this.Invoke("GetCallFileInfos", new object[] {
                        customerId,
                        campaignId});
            return ((CallFileInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallFileInfosAsync(int customerId, string campaignId) {
            this.GetCallFileInfosAsync(customerId, campaignId, null);
        }
        
        /// <remarks/>
        public void GetCallFileInfosAsync(int customerId, string campaignId, object userState) {
            if ((this.GetCallFileInfosOperationCompleted == null)) {
                this.GetCallFileInfosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallFileInfosOperationCompleted);
            }
            this.InvokeAsync("GetCallFileInfos", new object[] {
                        customerId,
                        campaignId}, this.GetCallFileInfosOperationCompleted, userState);
        }
        
        private void OnGetCallFileInfosOperationCompleted(object arg) {
            if ((this.GetCallFileInfosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallFileInfosCompleted(this, new GetCallFileInfosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/ApplyDnclToCallFile", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ApplyDnclToCallFile(int customerId, string callFileId, int startIndice) {
            object[] results = this.Invoke("ApplyDnclToCallFile", new object[] {
                        customerId,
                        callFileId,
                        startIndice});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyDnclToCallFileAsync(int customerId, string callFileId, int startIndice) {
            this.ApplyDnclToCallFileAsync(customerId, callFileId, startIndice, null);
        }
        
        /// <remarks/>
        public void ApplyDnclToCallFileAsync(int customerId, string callFileId, int startIndice, object userState) {
            if ((this.ApplyDnclToCallFileOperationCompleted == null)) {
                this.ApplyDnclToCallFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyDnclToCallFileOperationCompleted);
            }
            this.InvokeAsync("ApplyDnclToCallFile", new object[] {
                        customerId,
                        callFileId,
                        startIndice}, this.ApplyDnclToCallFileOperationCompleted, userState);
        }
        
        private void OnApplyDnclToCallFileOperationCompleted(object arg) {
            if ((this.ApplyDnclToCallFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyDnclToCallFileCompleted(this, new ApplyDnclToCallFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/ApplyDnclToCallFileForIndices", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ApplyDnclToCallFileForIndices(int customerId, string callFileId, int[] indices) {
            object[] results = this.Invoke("ApplyDnclToCallFileForIndices", new object[] {
                        customerId,
                        callFileId,
                        indices});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ApplyDnclToCallFileForIndicesAsync(int customerId, string callFileId, int[] indices) {
            this.ApplyDnclToCallFileForIndicesAsync(customerId, callFileId, indices, null);
        }
        
        /// <remarks/>
        public void ApplyDnclToCallFileForIndicesAsync(int customerId, string callFileId, int[] indices, object userState) {
            if ((this.ApplyDnclToCallFileForIndicesOperationCompleted == null)) {
                this.ApplyDnclToCallFileForIndicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyDnclToCallFileForIndicesOperationCompleted);
            }
            this.InvokeAsync("ApplyDnclToCallFileForIndices", new object[] {
                        customerId,
                        callFileId,
                        indices}, this.ApplyDnclToCallFileForIndicesOperationCompleted, userState);
        }
        
        private void OnApplyDnclToCallFileForIndicesOperationCompleted(object arg) {
            if ((this.ApplyDnclToCallFileForIndicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyDnclToCallFileForIndicesCompleted(this, new ApplyDnclToCallFileForIndicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/ListExistingIndices", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ListExistingIndices(int customerId, string callFileId, long[] indices) {
            object[] results = this.Invoke("ListExistingIndices", new object[] {
                        customerId,
                        callFileId,
                        indices});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ListExistingIndicesAsync(int customerId, string callFileId, long[] indices) {
            this.ListExistingIndicesAsync(customerId, callFileId, indices, null);
        }
        
        /// <remarks/>
        public void ListExistingIndicesAsync(int customerId, string callFileId, long[] indices, object userState) {
            if ((this.ListExistingIndicesOperationCompleted == null)) {
                this.ListExistingIndicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListExistingIndicesOperationCompleted);
            }
            this.InvokeAsync("ListExistingIndices", new object[] {
                        customerId,
                        callFileId,
                        indices}, this.ListExistingIndicesOperationCompleted, userState);
        }
        
        private void OnListExistingIndicesOperationCompleted(object arg) {
            if ((this.ListExistingIndicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListExistingIndicesCompleted(this, new ListExistingIndicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/GetDNCLInfo", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetDNCLInfo(int customerId) {
            object[] results = this.Invoke("GetDNCLInfo", new object[] {
                        customerId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetDNCLInfoAsync(int customerId) {
            this.GetDNCLInfoAsync(customerId, null);
        }
        
        /// <remarks/>
        public void GetDNCLInfoAsync(int customerId, object userState) {
            if ((this.GetDNCLInfoOperationCompleted == null)) {
                this.GetDNCLInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDNCLInfoOperationCompleted);
            }
            this.InvokeAsync("GetDNCLInfo", new object[] {
                        customerId}, this.GetDNCLInfoOperationCompleted, userState);
        }
        
        private void OnGetDNCLInfoOperationCompleted(object arg) {
            if ((this.GetDNCLInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDNCLInfoCompleted(this, new GetDNCLInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/GetDNCLInfoResult", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DnclInfoResult GetDNCLInfoResult(int taskNumber) {
            object[] results = this.Invoke("GetDNCLInfoResult", new object[] {
                        taskNumber});
            return ((DnclInfoResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetDNCLInfoResultAsync(int taskNumber) {
            this.GetDNCLInfoResultAsync(taskNumber, null);
        }
        
        /// <remarks/>
        public void GetDNCLInfoResultAsync(int taskNumber, object userState) {
            if ((this.GetDNCLInfoResultOperationCompleted == null)) {
                this.GetDNCLInfoResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDNCLInfoResultOperationCompleted);
            }
            this.InvokeAsync("GetDNCLInfoResult", new object[] {
                        taskNumber}, this.GetDNCLInfoResultOperationCompleted, userState);
        }
        
        private void OnGetDNCLInfoResultOperationCompleted(object arg) {
            if ((this.GetDNCLInfoResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDNCLInfoResultCompleted(this, new GetDNCLInfoResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/CountBlacklisted", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CountBlacklisted(int customerId, string callFileId) {
            object[] results = this.Invoke("CountBlacklisted", new object[] {
                        customerId,
                        callFileId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CountBlacklistedAsync(int customerId, string callFileId) {
            this.CountBlacklistedAsync(customerId, callFileId, null);
        }
        
        /// <remarks/>
        public void CountBlacklistedAsync(int customerId, string callFileId, object userState) {
            if ((this.CountBlacklistedOperationCompleted == null)) {
                this.CountBlacklistedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountBlacklistedOperationCompleted);
            }
            this.InvokeAsync("CountBlacklisted", new object[] {
                        customerId,
                        callFileId}, this.CountBlacklistedOperationCompleted, userState);
        }
        
        private void OnCountBlacklistedOperationCompleted(object arg) {
            if ((this.CountBlacklistedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountBlacklistedCompleted(this, new CountBlacklistedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/GetCountBlacklistedResult", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountResult GetCountBlacklistedResult(int taskNumber) {
            object[] results = this.Invoke("GetCountBlacklistedResult", new object[] {
                        taskNumber});
            return ((CountResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountBlacklistedResultAsync(int taskNumber) {
            this.GetCountBlacklistedResultAsync(taskNumber, null);
        }
        
        /// <remarks/>
        public void GetCountBlacklistedResultAsync(int taskNumber, object userState) {
            if ((this.GetCountBlacklistedResultOperationCompleted == null)) {
                this.GetCountBlacklistedResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountBlacklistedResultOperationCompleted);
            }
            this.InvokeAsync("GetCountBlacklistedResult", new object[] {
                        taskNumber}, this.GetCountBlacklistedResultOperationCompleted, userState);
        }
        
        private void OnGetCountBlacklistedResultOperationCompleted(object arg) {
            if ((this.GetCountBlacklistedResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountBlacklistedResultCompleted(this, new GetCountBlacklistedResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/CountCallRecords", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CountCallRecords(int customerId, string campaignId, string groupByCondition, string whereCondition) {
            object[] results = this.Invoke("CountCallRecords", new object[] {
                        customerId,
                        campaignId,
                        groupByCondition,
                        whereCondition});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CountCallRecordsAsync(int customerId, string campaignId, string groupByCondition, string whereCondition) {
            this.CountCallRecordsAsync(customerId, campaignId, groupByCondition, whereCondition, null);
        }
        
        /// <remarks/>
        public void CountCallRecordsAsync(int customerId, string campaignId, string groupByCondition, string whereCondition, object userState) {
            if ((this.CountCallRecordsOperationCompleted == null)) {
                this.CountCallRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountCallRecordsOperationCompleted);
            }
            this.InvokeAsync("CountCallRecords", new object[] {
                        customerId,
                        campaignId,
                        groupByCondition,
                        whereCondition}, this.CountCallRecordsOperationCompleted, userState);
        }
        
        private void OnCountCallRecordsOperationCompleted(object arg) {
            if ((this.CountCallRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountCallRecordsCompleted(this, new CountCallRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/GetCountCallRecordsResult", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallRecords[] GetCountCallRecordsResult(int taskNumber) {
            object[] results = this.Invoke("GetCountCallRecordsResult", new object[] {
                        taskNumber});
            return ((CallRecords[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCountCallRecordsResultAsync(int taskNumber) {
            this.GetCountCallRecordsResultAsync(taskNumber, null);
        }
        
        /// <remarks/>
        public void GetCountCallRecordsResultAsync(int taskNumber, object userState) {
            if ((this.GetCountCallRecordsResultOperationCompleted == null)) {
                this.GetCountCallRecordsResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountCallRecordsResultOperationCompleted);
            }
            this.InvokeAsync("GetCountCallRecordsResult", new object[] {
                        taskNumber}, this.GetCountCallRecordsResultOperationCompleted, userState);
        }
        
        private void OnGetCountCallRecordsResultOperationCompleted(object arg) {
            if ((this.GetCountCallRecordsResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountCallRecordsResultCompleted(this, new GetCountCallRecordsResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/GetApplyDnclResult", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ApplyDnclResult GetApplyDnclResult(int taskNumber) {
            object[] results = this.Invoke("GetApplyDnclResult", new object[] {
                        taskNumber});
            return ((ApplyDnclResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplyDnclResultAsync(int taskNumber) {
            this.GetApplyDnclResultAsync(taskNumber, null);
        }
        
        /// <remarks/>
        public void GetApplyDnclResultAsync(int taskNumber, object userState) {
            if ((this.GetApplyDnclResultOperationCompleted == null)) {
                this.GetApplyDnclResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplyDnclResultOperationCompleted);
            }
            this.InvokeAsync("GetApplyDnclResult", new object[] {
                        taskNumber}, this.GetApplyDnclResultOperationCompleted, userState);
        }
        
        private void OnGetApplyDnclResultOperationCompleted(object arg) {
            if ((this.GetApplyDnclResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplyDnclResultCompleted(this, new GetApplyDnclResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/ResetDncl", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ResetDncl(int customerId) {
            object[] results = this.Invoke("ResetDncl", new object[] {
                        customerId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ResetDnclAsync(int customerId) {
            this.ResetDnclAsync(customerId, null);
        }
        
        /// <remarks/>
        public void ResetDnclAsync(int customerId, object userState) {
            if ((this.ResetDnclOperationCompleted == null)) {
                this.ResetDnclOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetDnclOperationCompleted);
            }
            this.InvokeAsync("ResetDncl", new object[] {
                        customerId}, this.ResetDnclOperationCompleted, userState);
        }
        
        private void OnResetDnclOperationCompleted(object arg) {
            if ((this.ResetDnclCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetDnclCompleted(this, new ResetDnclCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/AddToDnclFromCsv", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddToDnclFromCsv(int customerId, string campaignId) {
            object[] results = this.Invoke("AddToDnclFromCsv", new object[] {
                        customerId,
                        campaignId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddToDnclFromCsvAsync(int customerId, string campaignId) {
            this.AddToDnclFromCsvAsync(customerId, campaignId, null);
        }
        
        /// <remarks/>
        public void AddToDnclFromCsvAsync(int customerId, string campaignId, object userState) {
            if ((this.AddToDnclFromCsvOperationCompleted == null)) {
                this.AddToDnclFromCsvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToDnclFromCsvOperationCompleted);
            }
            this.InvokeAsync("AddToDnclFromCsv", new object[] {
                        customerId,
                        campaignId}, this.AddToDnclFromCsvOperationCompleted, userState);
        }
        
        private void OnAddToDnclFromCsvOperationCompleted(object arg) {
            if ((this.AddToDnclFromCsvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToDnclFromCsvCompleted(this, new AddToDnclFromCsvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/AddToDncl", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaskResult AddToDncl(string phoneNumber, int customerId, string campaignId) {
            object[] results = this.Invoke("AddToDncl", new object[] {
                        phoneNumber,
                        customerId,
                        campaignId});
            return ((TaskResult)(results[0]));
        }
        
        /// <remarks/>
        public void AddToDnclAsync(string phoneNumber, int customerId, string campaignId) {
            this.AddToDnclAsync(phoneNumber, customerId, campaignId, null);
        }
        
        /// <remarks/>
        public void AddToDnclAsync(string phoneNumber, int customerId, string campaignId, object userState) {
            if ((this.AddToDnclOperationCompleted == null)) {
                this.AddToDnclOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToDnclOperationCompleted);
            }
            this.InvokeAsync("AddToDncl", new object[] {
                        phoneNumber,
                        customerId,
                        campaignId}, this.AddToDnclOperationCompleted, userState);
        }
        
        private void OnAddToDnclOperationCompleted(object arg) {
            if ((this.AddToDnclCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToDnclCompleted(this, new AddToDnclCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/SetCallFileTZ", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetCallFileTZ(int customerId, string callFileId, string condition) {
            object[] results = this.Invoke("SetCallFileTZ", new object[] {
                        customerId,
                        callFileId,
                        condition});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetCallFileTZAsync(int customerId, string callFileId, string condition) {
            this.SetCallFileTZAsync(customerId, callFileId, condition, null);
        }
        
        /// <remarks/>
        public void SetCallFileTZAsync(int customerId, string callFileId, string condition, object userState) {
            if ((this.SetCallFileTZOperationCompleted == null)) {
                this.SetCallFileTZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCallFileTZOperationCompleted);
            }
            this.InvokeAsync("SetCallFileTZ", new object[] {
                        customerId,
                        callFileId,
                        condition}, this.SetCallFileTZOperationCompleted, userState);
        }
        
        private void OnSetCallFileTZOperationCompleted(object arg) {
            if ((this.SetCallFileTZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCallFileTZCompleted(this, new SetCallFileTZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/GetCallFileTZ", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CallFileTzInfo[] GetCallFileTZ(int taskNumber) {
            object[] results = this.Invoke("GetCallFileTZ", new object[] {
                        taskNumber});
            return ((CallFileTzInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCallFileTZAsync(int taskNumber) {
            this.GetCallFileTZAsync(taskNumber, null);
        }
        
        /// <remarks/>
        public void GetCallFileTZAsync(int taskNumber, object userState) {
            if ((this.GetCallFileTZOperationCompleted == null)) {
                this.GetCallFileTZOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallFileTZOperationCompleted);
            }
            this.InvokeAsync("GetCallFileTZ", new object[] {
                        taskNumber}, this.GetCallFileTZOperationCompleted, userState);
        }
        
        private void OnGetCallFileTZOperationCompleted(object arg) {
            if ((this.GetCallFileTZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallFileTZCompleted(this, new GetCallFileTZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/ShuffleCallFile", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ShuffleCallFile(int customerId, string campaignId) {
            object[] results = this.Invoke("ShuffleCallFile", new object[] {
                        customerId,
                        campaignId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ShuffleCallFileAsync(int customerId, string campaignId) {
            this.ShuffleCallFileAsync(customerId, campaignId, null);
        }
        
        /// <remarks/>
        public void ShuffleCallFileAsync(int customerId, string campaignId, object userState) {
            if ((this.ShuffleCallFileOperationCompleted == null)) {
                this.ShuffleCallFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShuffleCallFileOperationCompleted);
            }
            this.InvokeAsync("ShuffleCallFile", new object[] {
                        customerId,
                        campaignId}, this.ShuffleCallFileOperationCompleted, userState);
        }
        
        private void OnShuffleCallFileOperationCompleted(object arg) {
            if ((this.ShuffleCallFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShuffleCallFileCompleted(this, new ShuffleCallFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vocalcom.com/CallFileUtilities/UpdateTelDisplayColumn", RequestNamespace="http://vocalcom.com/CallFileUtilities/", ResponseNamespace="http://vocalcom.com/CallFileUtilities/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateTelDisplayColumn(int customerId, string campaignId) {
            object[] results = this.Invoke("UpdateTelDisplayColumn", new object[] {
                        customerId,
                        campaignId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTelDisplayColumnAsync(int customerId, string campaignId) {
            this.UpdateTelDisplayColumnAsync(customerId, campaignId, null);
        }
        
        /// <remarks/>
        public void UpdateTelDisplayColumnAsync(int customerId, string campaignId, object userState) {
            if ((this.UpdateTelDisplayColumnOperationCompleted == null)) {
                this.UpdateTelDisplayColumnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTelDisplayColumnOperationCompleted);
            }
            this.InvokeAsync("UpdateTelDisplayColumn", new object[] {
                        customerId,
                        campaignId}, this.UpdateTelDisplayColumnOperationCompleted, userState);
        }
        
        private void OnUpdateTelDisplayColumnOperationCompleted(object arg) {
            if ((this.UpdateTelDisplayColumnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTelDisplayColumnCompleted(this, new UpdateTelDisplayColumnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vocalcom.com/CallFileUtilities/")]
    public partial class TaskProgression {
        
        private TaskResult resultField;
        
        private int progressionField;
        
        private string detailField;
        
        private long positionField;
        
        private long totalField;
        
        /// <remarks/>
        public TaskResult Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public int Progression {
            get {
                return this.progressionField;
            }
            set {
                this.progressionField = value;
            }
        }
        
        /// <remarks/>
        public string Detail {
            get {
                return this.detailField;
            }
            set {
                this.detailField = value;
            }
        }
        
        /// <remarks/>
        public long Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public long Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vocalcom.com/CallFileUtilities/")]
    public enum TaskResult {
        
        /// <remarks/>
        Pending,
        
        /// <remarks/>
        InProgress,
        
        /// <remarks/>
        CompletedOK,
        
        /// <remarks/>
        CompletedWithError,
        
        /// <remarks/>
        ErrorCampaignNotFound,
        
        /// <remarks/>
        ErrorNoCallFile,
        
        /// <remarks/>
        ErrorNoClientFile,
        
        /// <remarks/>
        ErrorBadQueryFormat,
        
        /// <remarks/>
        ErrorTaskNotFound,
        
        /// <remarks/>
        ErrorBadParameter,
        
        /// <remarks/>
        ErrorTaskQueueFull,
        
        /// <remarks/>
        ErrorUnauthenticated,
        
        /// <remarks/>
        ErrorCustomerNotAllowed,
        
        /// <remarks/>
        ErrorNoDncl,
        
        /// <remarks/>
        ErrorUnknown,
        
        /// <remarks/>
        ErrorNoProfiler,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vocalcom.com/CallFileUtilities/")]
    public partial class ApplyDnclResult {
        
        private long[] blackListedIndicesField;
        
        private long[] includedIndicesField;
        
        private long[] excludedIndicesField;
        
        /// <remarks/>
        public long[] BlackListedIndices {
            get {
                return this.blackListedIndicesField;
            }
            set {
                this.blackListedIndicesField = value;
            }
        }
        
        /// <remarks/>
        public long[] IncludedIndices {
            get {
                return this.includedIndicesField;
            }
            set {
                this.includedIndicesField = value;
            }
        }
        
        /// <remarks/>
        public long[] ExcludedIndices {
            get {
                return this.excludedIndicesField;
            }
            set {
                this.excludedIndicesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vocalcom.com/CallFileUtilities/")]
    public partial class CallRecords {
        
        private string recordField;
        
        /// <remarks/>
        public string Record {
            get {
                return this.recordField;
            }
            set {
                this.recordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DnclInfoResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vocalcom.com/CallFileUtilities/")]
    public partial class CountResult {
        
        private int nbItemsField;
        
        /// <remarks/>
        public int nbItems {
            get {
                return this.nbItemsField;
            }
            set {
                this.nbItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vocalcom.com/CallFileUtilities/")]
    public partial class DnclInfoResult : CountResult {
        
        private System.DateTime lastUpdateField;
        
        /// <remarks/>
        public System.DateTime lastUpdate {
            get {
                return this.lastUpdateField;
            }
            set {
                this.lastUpdateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vocalcom.com/CallFileUtilities/")]
    public partial class CallWithPriority {
        
        private int indiceField;
        
        private Priority priorityField;
        
        /// <remarks/>
        public int Indice {
            get {
                return this.indiceField;
            }
            set {
                this.indiceField = value;
            }
        }
        
        /// <remarks/>
        public Priority Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vocalcom.com/CallFileUtilities/")]
    public enum Priority {
        
        /// <remarks/>
        HIGH,
        
        /// <remarks/>
        MEDIUM,
        
        /// <remarks/>
        LOW,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vocalcom.com/CallFileUtilities/")]
    public partial class CallInfo {
        
        private long indiceField;
        
        private bool excludedField;
        
        private string excludedReasonField;
        
        private System.DateTime callBackHourField;
        
        private int priorityField;
        
        private int sortOrderField;
        
        private int nbCallsField;
        
        private int nivAbsField;
        
        private int agentCodeField;
        
        private int statusGroupField;
        
        private int statusCodeField;
        
        private int statusDetailField;
        
        private string statusLibField;
        
        private string statusSubLibField;
        
        private string[] phoneNumbersField;
        
        /// <remarks/>
        public long Indice {
            get {
                return this.indiceField;
            }
            set {
                this.indiceField = value;
            }
        }
        
        /// <remarks/>
        public bool Excluded {
            get {
                return this.excludedField;
            }
            set {
                this.excludedField = value;
            }
        }
        
        /// <remarks/>
        public string ExcludedReason {
            get {
                return this.excludedReasonField;
            }
            set {
                this.excludedReasonField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CallBackHour {
            get {
                return this.callBackHourField;
            }
            set {
                this.callBackHourField = value;
            }
        }
        
        /// <remarks/>
        public int Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public int SortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        public int NbCalls {
            get {
                return this.nbCallsField;
            }
            set {
                this.nbCallsField = value;
            }
        }
        
        /// <remarks/>
        public int NivAbs {
            get {
                return this.nivAbsField;
            }
            set {
                this.nivAbsField = value;
            }
        }
        
        /// <remarks/>
        public int AgentCode {
            get {
                return this.agentCodeField;
            }
            set {
                this.agentCodeField = value;
            }
        }
        
        /// <remarks/>
        public int StatusGroup {
            get {
                return this.statusGroupField;
            }
            set {
                this.statusGroupField = value;
            }
        }
        
        /// <remarks/>
        public int StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public int StatusDetail {
            get {
                return this.statusDetailField;
            }
            set {
                this.statusDetailField = value;
            }
        }
        
        /// <remarks/>
        public string StatusLib {
            get {
                return this.statusLibField;
            }
            set {
                this.statusLibField = value;
            }
        }
        
        /// <remarks/>
        public string StatusSubLib {
            get {
                return this.statusSubLibField;
            }
            set {
                this.statusSubLibField = value;
            }
        }
        
        /// <remarks/>
        public string[] PhoneNumbers {
            get {
                return this.phoneNumbersField;
            }
            set {
                this.phoneNumbersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vocalcom.com/CallFileUtilities/")]
    public partial class TrialUrlInfo {
        
        private TaskResult resultField;
        
        private string lastErrorField;
        
        private string[] columnsField;
        
        /// <remarks/>
        public TaskResult Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string LastError {
            get {
                return this.lastErrorField;
            }
            set {
                this.lastErrorField = value;
            }
        }
        
        /// <remarks/>
        public string[] Columns {
            get {
                return this.columnsField;
            }
            set {
                this.columnsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vocalcom.com/CallFileUtilities/")]
    public partial class CallFileInfo {
        
        private TaskResult resultField;
        
        private string lastErrorField;
        
        private string callFileConnectionStringField;
        
        private string callFileTableField;
        
        private string clientFileConnectionStringField;
        
        private string clientFileTableField;
        
        /// <remarks/>
        public TaskResult Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string LastError {
            get {
                return this.lastErrorField;
            }
            set {
                this.lastErrorField = value;
            }
        }
        
        /// <remarks/>
        public string CallFileConnectionString {
            get {
                return this.callFileConnectionStringField;
            }
            set {
                this.callFileConnectionStringField = value;
            }
        }
        
        /// <remarks/>
        public string CallFileTable {
            get {
                return this.callFileTableField;
            }
            set {
                this.callFileTableField = value;
            }
        }
        
        /// <remarks/>
        public string ClientFileConnectionString {
            get {
                return this.clientFileConnectionStringField;
            }
            set {
                this.clientFileConnectionStringField = value;
            }
        }
        
        /// <remarks/>
        public string ClientFileTable {
            get {
                return this.clientFileTableField;
            }
            set {
                this.clientFileTableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vocalcom.com/CallFileUtilities/")]
    public partial class CallFileTzInfo {
        
        private string tzIdField;
        
        private int countField;
        
        /// <remarks/>
        public string TzId {
            get {
                return this.tzIdField;
            }
            set {
                this.tzIdField = value;
            }
        }
        
        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vocalcom.com/CallFileUtilities/")]
    public partial class ImportationError {
        
        private string destinationField;
        
        private object[] dataField;
        
        private string reasonField;
        
        /// <remarks/>
        public string Destination {
            get {
                return this.destinationField;
            }
            set {
                this.destinationField = value;
            }
        }
        
        /// <remarks/>
        public object[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetTaskProgressionCompletedEventHandler(object sender, GetTaskProgressionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskProgressionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskProgressionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskProgression Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskProgression)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetTaskModifiedIndicesCompletedEventHandler(object sender, GetTaskModifiedIndicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskModifiedIndicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskModifiedIndicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetImportationErrorsCompletedEventHandler(object sender, GetImportationErrorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImportationErrorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImportationErrorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImportationError[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImportationError[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ExcludeCallsCompletedEventHandler(object sender, ExcludeCallsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcludeCallsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcludeCallsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IncludeCallsCompletedEventHandler(object sender, IncludeCallsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncludeCallsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IncludeCallsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ChangeCallsOrderCompletedEventHandler(object sender, ChangeCallsOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeCallsOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeCallsOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ChangeCallsPriorityCompletedEventHandler(object sender, ChangeCallsPriorityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeCallsPriorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeCallsPriorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IncrementDecrementCallsPriorityCompletedEventHandler(object sender, IncrementDecrementCallsPriorityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncrementDecrementCallsPriorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IncrementDecrementCallsPriorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetCallsPriorityCompletedEventHandler(object sender, SetCallsPriorityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCallsPriorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCallsPriorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RecycleCallsCompletedEventHandler(object sender, RecycleCallsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecycleCallsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecycleCallsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCallsInformationsCompletedEventHandler(object sender, GetCallsInformationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallsInformationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallsInformationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCallsInformationsResultCompletedEventHandler(object sender, GetCallsInformationsResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallsInformationsResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallsInformationsResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddToTrialCallFileFromUrlCompletedEventHandler(object sender, AddToTrialCallFileFromUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToTrialCallFileFromUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToTrialCallFileFromUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CheckTrialImportationUrlCompletedEventHandler(object sender, CheckTrialImportationUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckTrialImportationUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckTrialImportationUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrialUrlInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrialUrlInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddClientsFromJsonCompletedEventHandler(object sender, AddClientsFromJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddClientsFromJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddClientsFromJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddClientsCompletedEventHandler(object sender, AddClientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateClientFromJsonCompletedEventHandler(object sender, UpdateClientFromJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClientFromJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClientFromJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateClientCompletedEventHandler(object sender, UpdateClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteClientsCompletedEventHandler(object sender, DeleteClientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddCallsCompletedEventHandler(object sender, AddCallsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCallsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCallsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteCallsCompletedEventHandler(object sender, DeleteCallsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCallsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCallsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateCallbacksCompletedEventHandler(object sender, UpdateCallbacksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCallbacksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCallbacksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateCallbacksForCallFileCompletedEventHandler(object sender, UpdateCallbacksForCallFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCallbacksForCallFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCallbacksForCallFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ChangeCallsAffectationCompletedEventHandler(object sender, ChangeCallsAffectationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeCallsAffectationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeCallsAffectationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ExecuteProfilerCompletedEventHandler(object sender, ExecuteProfilerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteProfilerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteProfilerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCallFileInfosCompletedEventHandler(object sender, GetCallFileInfosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallFileInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallFileInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallFileInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallFileInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ApplyDnclToCallFileCompletedEventHandler(object sender, ApplyDnclToCallFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyDnclToCallFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyDnclToCallFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ApplyDnclToCallFileForIndicesCompletedEventHandler(object sender, ApplyDnclToCallFileForIndicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyDnclToCallFileForIndicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyDnclToCallFileForIndicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ListExistingIndicesCompletedEventHandler(object sender, ListExistingIndicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListExistingIndicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListExistingIndicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDNCLInfoCompletedEventHandler(object sender, GetDNCLInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDNCLInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDNCLInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDNCLInfoResultCompletedEventHandler(object sender, GetDNCLInfoResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDNCLInfoResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDNCLInfoResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DnclInfoResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DnclInfoResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CountBlacklistedCompletedEventHandler(object sender, CountBlacklistedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountBlacklistedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountBlacklistedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCountBlacklistedResultCompletedEventHandler(object sender, GetCountBlacklistedResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountBlacklistedResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountBlacklistedResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CountCallRecordsCompletedEventHandler(object sender, CountCallRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountCallRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountCallRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCountCallRecordsResultCompletedEventHandler(object sender, GetCountCallRecordsResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountCallRecordsResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountCallRecordsResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallRecords[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallRecords[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetApplyDnclResultCompletedEventHandler(object sender, GetApplyDnclResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplyDnclResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplyDnclResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApplyDnclResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApplyDnclResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ResetDnclCompletedEventHandler(object sender, ResetDnclCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetDnclCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetDnclCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddToDnclFromCsvCompletedEventHandler(object sender, AddToDnclFromCsvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToDnclFromCsvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToDnclFromCsvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddToDnclCompletedEventHandler(object sender, AddToDnclCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToDnclCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToDnclCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetCallFileTZCompletedEventHandler(object sender, SetCallFileTZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCallFileTZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCallFileTZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCallFileTZCompletedEventHandler(object sender, GetCallFileTZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallFileTZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallFileTZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallFileTzInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallFileTzInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ShuffleCallFileCompletedEventHandler(object sender, ShuffleCallFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShuffleCallFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShuffleCallFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateTelDisplayColumnCompletedEventHandler(object sender, UpdateTelDisplayColumnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTelDisplayColumnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTelDisplayColumnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591